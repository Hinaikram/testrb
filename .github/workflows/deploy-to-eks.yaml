name: Deploy Infra and Spring Boot Application to EKS

on:
  push:
    branches:
      - main

jobs:
  terraform-deploy:
    name: Deploy Terraform Infrastructure to EKS
    uses: Hinaikram/testrb/.github/workflows/reuseable-terraform.yaml@main
    with:
      tf_directory: 'terraform'
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_STATE_S3_BUCKET: ${{ secrets.TF_STATE_S3_BUCKET }}
      TF_STATE_FILE_KEY: ${{ secrets.TF_STATE_FILE_KEY }}
      TF_STATE_DYNAMODB_TABLE: ${{ secrets.TF_STATE_DYNAMODB_TABLE }}
      S3_AWS_REGION: ${{ secrets.S3_AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

  springboot-deploy:
    name: Deploy Spring Boot Application to EKS
    needs: terraform-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Configure kubectl to use EKS
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ECR_URL }}/springboot-app:${{ github.sha }} .
          docker push ${{ secrets.ECR_URL }}/springboot-app:${{ github.sha }}

      - name: Deploy Spring Boot app to EKS
        run: |
          kubectl set image deployment/springboot-deployment springboot-app=${{ secrets.ECR_URL }}/springboot-app:${{ github.sha }}
          kubectl rollout status deployment/springboot-deployment

      - name: Notify success
        run: |
          echo "Spring Boot application deployed to EKS successfully!"
